@model KAssets.Areas.Admin.Models.RegisterViewModel

@{
    ViewBag.Title = "Add a new user";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Admin.AddNewUser</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedSecurityGroups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row">
                    @for (int i = 0; i < Model.SelectedSecurityGroups.Count; i++)
                    {
                        <div class="col-md-4">
                            <label>
                                @Html.CheckBoxFor(x => Model.SelectedSecurityGroups[i].IsSelected)
                                @Model.SelectedSecurityGroups[i].SecurityGroup.Name
                            </label>
                        </div>
                        @Html.HiddenFor(x => x.SelectedSecurityGroups[i].SecurityGroup.Name)
                        @Html.HiddenFor(x => x.SelectedSecurityGroups[i].SecurityGroup.Id)
                    }
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Organisations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedOrganisationId, Model.Organisations.Select(item => new SelectListItem { Value = item.Id.ToString(), Text = item.Name })
                  , @Admin.SelectOrganisation, new { @class = "form-control", @id = "selectOrganisation" })
                @Html.ValidationMessageFor(model => model.SelectedLocationCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedSiteId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedSiteId, new SelectList(new List<int>()), @Admin.SelectSite, new { @class = "form-control", @id = "selectSite" })
                @Html.ValidationMessageFor(model => model.SelectedLocationCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <hr />
            <h4>@Common.Location</h4>
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedLocationCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedLocationCode, Model.Locations.Select(item => new SelectListItem { Value = item.Code, Text = item.Location })
                    , @Admin.SelectLocation, new { @class = "form-control", @id = "selectLocation" })
                    @Html.ValidationMessageFor(model => model.SelectedLocationCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="@Common.Create" class="btn btn-default" />
            </div>
            <div class="col-md-9">
                <a href="/Admin/User/GetAll" class="btn btn-default">@Common.Cancel</a>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //Get site in selected organisation and set them to "selectSite" dropdown
        $("#selectOrganisation").change(function () {
            var organisationId = $("#selectOrganisation option:selected").val();
            $.ajax({
                type: "GET",
                url: "/Admin/Site/GetSitesInOrganisation/" + organisationId,
                success: function (data) {
                    $("#selectSite").html("");
                    $("#selectSite").append(new Option("@Admin.SelectSite", ""));
                    $.each(data, function () {
                        $("#selectSite").append(new Option(this.Name, this.Id));
                    });

                }
            })
            $.ajax({
                type: "GET",
                url: "/Admin/User/ChooseLocations/" + organisationId,
                success: function (data) {
                    $("#selectLocation").html("");
                    $("#selectLocation").append(new Option("@Admin.SelectLocation", ""));
                    $.each(data, function () {
                        $("#selectLocation").append(new Option(this.Location, this.Code));
                    });

                }
            })
        });
    </script>
}

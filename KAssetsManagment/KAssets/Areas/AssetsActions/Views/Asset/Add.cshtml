@model KAssets.Areas.Orders.Models.AddAssetFullViewModel

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .inline {
        display: inline;
    }
</style>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link href="~/Content/styles.css" rel="stylesheet" />

<div id="sites" class="hidden" title="@AssetTr.ChooseSite">
</div>

<div id="users" class="hidden" title="@AssetTr.ChooseUser">
</div>

<div id="locations" class="hidden" title="@AssetTr.ChooseLocation">
</div>

<h2>@AssetTr.AddNewAsset</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.InventoryNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InventoryNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InventoryNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Guarantee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Guarantee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Guarantee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control inline", @readonly = "readonly", @id = "locationId" } })
                <a class="btn btn-default chooseLocation">@Common.Choose</a>
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                <br />
                <input type="button" id="clearLocation" value="@Common.Clear" class="btn btn-sm btn-danger" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox(" ", "", new { @class = "form-control inline", disabled = "disabled", id = "siteName" })
                @Html.HiddenFor(model => model.SiteId, new { @class = "form-control inline", @readonly = "readonly", @id = "siteId" })
                <a class="btn btn-default chooseSite">@Common.Choose</a>
                @Html.ValidationMessageFor(model => model.SiteId, "", new { @class = "text-danger" })
                <br />
                <input type="button" id="clearSite" value="@Common.Clear" class="btn btn-sm btn-danger" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control inline", @readonly = "readonly", @id = "userId" } })
                <a class="btn btn-default chooseUser">@Common.Choose</a>
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                <br />
                <input type="button" id="clearUser" value="@Common.Clear" class="btn btn-sm btn-danger" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemModel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemModel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemModel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCurrency, Model.Currency.Select(item => new SelectListItem { Value = item.Id.ToString(), Text = item.Code })

                  , new { @class = "form-control", @id = "selectCurrency" })

                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => Model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => Model.Type,
                new SelectList(
               Enum.GetNames(typeof(KAssets.Models.TypesOfAsset)).ToList()
                ), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => Model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="@Common.Create" class="btn btn-default" />
            </div>
            <div class="col-md-9">
                @Html.ActionLink(@Common.Cancel, "GetAll", null, new { @class = "btn btn-default" })
            </div>
        </div>

    </div>
}
@section Scripts
{
<script src="~/Areas/AssetsActions/Scripts/Asset/AddJS.js"></script>
}

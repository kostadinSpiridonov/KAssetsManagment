<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="n1" xml:space="preserve">
    <value>Super admin. The user has full access</value>
  </data>
  <data name="n10" xml:space="preserve">
    <value>The user can approve request for scrapping an asset..</value>
  </data>
  <data name="n11" xml:space="preserve">
    <value>The user can send request for relocation.</value>
  </data>
  <data name="n12" xml:space="preserve">
    <value>The user can approve request for relocation.</value>
  </data>
  <data name="n13" xml:space="preserve">
    <value>The user can send request for renovation.</value>
  </data>
  <data name="n14" xml:space="preserve">
    <value>The user can approve request for renovation.</value>
  </data>
  <data name="n15" xml:space="preserve">
    <value>The user can renovate assets.</value>
  </data>
  <data name="n16" xml:space="preserve">
    <value>The user can add, edit and delete providers.</value>
  </data>
  <data name="n17" xml:space="preserve">
    <value>The user can create order for asset.</value>
  </data>
  <data name="n18" xml:space="preserve">
    <value>The user can approve orders for asset.</value>
  </data>
  <data name="n19" xml:space="preserve">
    <value>The user can give items for asset order.</value>
  </data>
  <data name="n2" xml:space="preserve">
    <value>The user can add, remove and edit organisations.</value>
  </data>
  <data name="n20" xml:space="preserve">
    <value>The user can send request to provider for items.</value>
  </data>
  <data name="n21" xml:space="preserve">
    <value>The user can Approve request to provider for items.</value>
  </data>
  <data name="n22" xml:space="preserve">
    <value>The user can add ad edit currency.</value>
  </data>
  <data name="n23" xml:space="preserve">
    <value>The user can add and change exchange rates.</value>
  </data>
  <data name="n24" xml:space="preserve">
    <value>The user can create invoices.</value>
  </data>
  <data name="n25" xml:space="preserve">
    <value>The user can approve invoices.</value>
  </data>
  <data name="n26" xml:space="preserve">
    <value>The user can pay invoices.</value>
  </data>
  <data name="n27" xml:space="preserve">
    <value>The user can answer queries from other users on the system.</value>
  </data>
  <data name="n28" xml:space="preserve">
    <value>The user can create report for assets by status.</value>
  </data>
  <data name="n29" xml:space="preserve">
    <value>The user can create report for accidents by status.</value>
  </data>
  <data name="n3" xml:space="preserve">
    <value>The user can add, remove and edit sites in organisation.</value>
  </data>
  <data name="n30" xml:space="preserve">
    <value>The user can create report for invoice by creation, approving and payment date and other fields.</value>
  </data>
  <data name="n31" xml:space="preserve">
    <value>The user can create report about all relocations for certain asset.</value>
  </data>
  <data name="n32" xml:space="preserve">
    <value>The user can create report about all renovated assets between two dates.</value>
  </data>
  <data name="n33" xml:space="preserve">
    <value>The user manages organisation, sites, users and security groups.</value>
  </data>
  <data name="n4" xml:space="preserve">
    <value>The user can add, remove and edit items in application.</value>
  </data>
  <data name="n5" xml:space="preserve">
    <value>The user can edit, add assets, send request for scrapping</value>
  </data>
  <data name="n6" xml:space="preserve">
    <value>The user can add, remove and edit items in location.</value>
  </data>
  <data name="n7" xml:space="preserve">
    <value>The user can create a order for item.</value>
  </data>
  <data name="n8" xml:space="preserve">
    <value>The user can approve orders for item.</value>
  </data>
  <data name="n9" xml:space="preserve">
    <value>The user can give items  for item order</value>
  </data>
  <data name="r1" xml:space="preserve">
    <value>Admin right</value>
    <comment>The user can add, remove and edit the users in application.The user cann add, remove and edit security groups. The user can give add users in security groups.</comment>
  </data>
  <data name="r10" xml:space="preserve">
    <value>Approve request for scrapping</value>
    <comment>The user can approve request for scrapping an asset..</comment>
  </data>
  <data name="r11" xml:space="preserve">
    <value>Send request for relocation</value>
    <comment>The user can send request for relocation.</comment>
  </data>
  <data name="r12" xml:space="preserve">
    <value>Approve request for relocation</value>
    <comment>The user can approve request for relocation.</comment>
  </data>
  <data name="r13" xml:space="preserve">
    <value>Send request for renovation</value>
    <comment>The user can send request for renovation.</comment>
  </data>
  <data name="r14" xml:space="preserve">
    <value>Approve request for renovation</value>
    <comment>The user can approve request for renovation.</comment>
  </data>
  <data name="r15" xml:space="preserve">
    <value>Renovate assets</value>
    <comment>The user can renovate assets.</comment>
  </data>
  <data name="r16" xml:space="preserve">
    <value>Manage providers</value>
    <comment>The user can add, edit and delete providers.</comment>
  </data>
  <data name="r17" xml:space="preserve">
    <value>Create order for asset</value>
    <comment>The user can create order for asset.</comment>
  </data>
  <data name="r18" xml:space="preserve">
    <value>Approve orders for asset</value>
    <comment>The user can approve orders for asset.</comment>
  </data>
  <data name="r19" xml:space="preserve">
    <value>Give assets for asset orders</value>
    <comment>The user can give items for asset order.</comment>
  </data>
  <data name="r2" xml:space="preserve">
    <value>Manage organisation</value>
    <comment>The user can add, remove and edit organisations.</comment>
  </data>
  <data name="r20" xml:space="preserve">
    <value>Send request to provider</value>
    <comment>The user can send request to provider for items.</comment>
  </data>
  <data name="r21" xml:space="preserve">
    <value>Approve request to provider</value>
    <comment>The user can Approve request to provider for items.</comment>
  </data>
  <data name="r22" xml:space="preserve">
    <value>Manage currency</value>
    <comment>The user can add ad edit currency.</comment>
  </data>
  <data name="r23" xml:space="preserve">
    <value>Manage exchange rates</value>
    <comment>The user can add and change exchange rates.</comment>
  </data>
  <data name="r24" xml:space="preserve">
    <value>Create invoice</value>
    <comment>The user can create invoices.</comment>
  </data>
  <data name="r25" xml:space="preserve">
    <value>Approve invoice</value>
    <comment>The user can approve invoices.</comment>
  </data>
  <data name="r26" xml:space="preserve">
    <value>Pay invoice</value>
    <comment>The user can pay invoices.</comment>
  </data>
  <data name="r27" xml:space="preserve">
    <value>Responding to incidents</value>
    <comment>The user can answer queries from other users on the system.</comment>
  </data>
  <data name="r28" xml:space="preserve">
    <value>Report for assets by status</value>
    <comment>The user can create report for assets by status.</comment>
  </data>
  <data name="r29" xml:space="preserve">
    <value>Report for accidents by date</value>
    <comment>The user can create report for accidents by status.</comment>
  </data>
  <data name="r3" xml:space="preserve">
    <value>Manage site</value>
    <comment>The user can add, remove and edit sites in organisation.</comment>
  </data>
  <data name="r30" xml:space="preserve">
    <value>Report for invoices by date</value>
    <comment>The user can create report for invoice by creation, approving and payment date and other fields.</comment>
  </data>
  <data name="r31" xml:space="preserve">
    <value>Report for asset relocations</value>
    <comment>The user can create report about all relocations for certain asset.</comment>
  </data>
  <data name="r32" xml:space="preserve">
    <value>Report for renovated assets</value>
    <comment>The user can create report about all renovated assets between two dates.</comment>
  </data>
  <data name="r33" xml:space="preserve">
    <value>Low admin</value>
  </data>
  <data name="r4" xml:space="preserve">
    <value>Manage items</value>
    <comment>The user can add, remove and edit items in application.</comment>
  </data>
  <data name="r5" xml:space="preserve">
    <value>Manage assets</value>
    <comment>The user can edit, add assets, send request for scrapping</comment>
  </data>
  <data name="r6" xml:space="preserve">
    <value>Manage locations</value>
    <comment>The user can add, remove and edit items in location.</comment>
  </data>
  <data name="r7" xml:space="preserve">
    <value>Create order for item</value>
    <comment>The user can create a order for item.</comment>
  </data>
  <data name="r8" xml:space="preserve">
    <value>Approve order for item</value>
    <comment>The user can approve orders for item.</comment>
  </data>
  <data name="r9" xml:space="preserve">
    <value>Give items for item order</value>
    <comment>The user can give items  for item order</comment>
  </data>
</root>
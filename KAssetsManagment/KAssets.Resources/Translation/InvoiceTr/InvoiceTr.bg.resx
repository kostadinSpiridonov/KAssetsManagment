<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcountablePerson" xml:space="preserve">
    <value>Материално отговорно лице</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Одобрена ли е?</value>
  </data>
  <data name="BillTo" xml:space="preserve">
    <value>Платена на</value>
  </data>
  <data name="Bulstat" xml:space="preserve">
    <value>Булстат</value>
  </data>
  <data name="ChooseItems" xml:space="preserve">
    <value>Избери артикули</value>
  </data>
  <data name="ChooseOrder" xml:space="preserve">
    <value>Избери поръчка</value>
  </data>
  <data name="ChooseProvider" xml:space="preserve">
    <value>Избери доставчик</value>
  </data>
  <data name="CompiledUser" xml:space="preserve">
    <value>Съставил</value>
  </data>
  <data name="CreateInvoice" xml:space="preserve">
    <value>Създаване на фактура</value>
  </data>
  <data name="DateOfApproving" xml:space="preserve">
    <value>Дата на одобряване</value>
  </data>
  <data name="DateOfCreation" xml:space="preserve">
    <value>Дата на издаване</value>
  </data>
  <data name="DateOfIssue" xml:space="preserve">
    <value>Дата на издаване</value>
  </data>
  <data name="DateOfPayment" xml:space="preserve">
    <value>Дата на плащане</value>
  </data>
  <data name="DateOfSend" xml:space="preserve">
    <value>Дата на изпращане</value>
  </data>
  <data name="Dates" xml:space="preserve">
    <value>Дати</value>
  </data>
  <data name="DeclineInvoice" xml:space="preserve">
    <value>Отказване на фактура</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Завършена ли е?</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>От</value>
  </data>
  <data name="HistoryInvoice" xml:space="preserve">
    <value>История на фактура</value>
  </data>
  <data name="InvoiceForApproving" xml:space="preserve">
    <value>Фактура за одобрение</value>
  </data>
  <data name="InvoiceForPaying" xml:space="preserve">
    <value>Фактура за плащане</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Номер на фактура</value>
  </data>
  <data name="InvoiceNumberIsrequired" xml:space="preserve">
    <value>Полето "Инвентарен номер" е задължително.</value>
  </data>
  <data name="InvoicesForApproving" xml:space="preserve">
    <value>Фактури за одобрение</value>
  </data>
  <data name="InvoicesForPaid" xml:space="preserve">
    <value>Фактури за плащане</value>
  </data>
  <data name="MustMember" xml:space="preserve">
    <value>Вие трябва да бъдете член към някой сайт !</value>
  </data>
  <data name="MustSelectItems" xml:space="preserve">
    <value>Трябва да изберете артикули.</value>
  </data>
  <data name="NoInvoicesForApproving" xml:space="preserve">
    <value>Няма фактури за одобрение !</value>
  </data>
  <data name="NoInvoicesForPaid" xml:space="preserve">
    <value>Няма фактури за плащане !</value>
  </data>
  <data name="NotApproved" xml:space="preserve">
    <value>Не е одобрена</value>
    <comment>\</comment>
  </data>
  <data name="NotPayed" xml:space="preserve">
    <value>Не е платена</value>
  </data>
  <data name="OrOrAnd" xml:space="preserve">
    <value>Вид на търсене</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Платена ли е?</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Плати</value>
  </data>
  <data name="PaymentPeriod" xml:space="preserve">
    <value>Срок за плащане</value>
  </data>
  <data name="PaymentPeriodIsRequired" xml:space="preserve">
    <value>Полето "Срок за плащане" е задължително.</value>
  </data>
  <data name="PleaseSelectItems" xml:space="preserve">
    <value>Моля изберете артикули</value>
  </data>
  <data name="PleaseSelectPO" xml:space="preserve">
    <value>Моля изберете поръчка от доставчик</value>
  </data>
  <data name="PleaseSelectPovider" xml:space="preserve">
    <value>Моля изберете доставчик</value>
  </data>
  <data name="Provider" xml:space="preserve">
    <value>Доставчик</value>
  </data>
  <data name="ProviderIsRequired" xml:space="preserve">
    <value>Полето "Доставчик" е задължително.</value>
  </data>
  <data name="ProviderOrder" xml:space="preserve">
    <value>Поръчка от доставчик</value>
  </data>
  <data name="RecipientMOLIsRequired" xml:space="preserve">
    <value>Полето "Материално отговорно лице" е задължително.</value>
  </data>
  <data name="RemitTo" xml:space="preserve">
    <value>Издадена на</value>
  </data>
  <data name="SameInventoryNumber" xml:space="preserve">
    <value>Вече съществува фактура със този инвентарен номер !</value>
  </data>
  <data name="SameNum" xml:space="preserve">
    <value>Вече съществува фактура със този номер !</value>
  </data>
  <data name="SentEmail" xml:space="preserve">
    <value>Изпратен имейл</value>
  </data>
</root>
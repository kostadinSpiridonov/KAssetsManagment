<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApprovedItems" xml:space="preserve">
    <value>Одобрени артикули</value>
  </data>
  <data name="ApprovedRequestIO" xml:space="preserve">
    <value>Одобрена заявка (Поръчка артикул)</value>
  </data>
  <data name="AreItemsForLocation" xml:space="preserve">
    <value>Артикулите за локация ли са?</value>
  </data>
  <data name="AreItemsForUser" xml:space="preserve">
    <value>Артикулите за потребител ли са?</value>
  </data>
  <data name="AreItemsGave" xml:space="preserve">
    <value>Артикулите предадени ли са?</value>
  </data>
  <data name="BaseDetails" xml:space="preserve">
    <value>Основни детайли</value>
  </data>
  <data name="ChooseItems" xml:space="preserve">
    <value>Избери артикули</value>
  </data>
  <data name="ChooseLocation" xml:space="preserve">
    <value>Избери локация</value>
  </data>
  <data name="ChooseUser" xml:space="preserve">
    <value>Избери потребител</value>
  </data>
  <data name="CreateAsset" xml:space="preserve">
    <value>Създай актив</value>
  </data>
  <data name="CreateAssets" xml:space="preserve">
    <value>Създай активи</value>
  </data>
  <data name="DeclineRequest" xml:space="preserve">
    <value>Откажи заявка за артикули</value>
  </data>
  <data name="FinishedRequestIO" xml:space="preserve">
    <value>Завършени поръчки (Поръчка артикули)</value>
  </data>
  <data name="ForLocation" xml:space="preserve">
    <value>За локация</value>
  </data>
  <data name="ForSite" xml:space="preserve">
    <value>За сайт</value>
  </data>
  <data name="ForUser" xml:space="preserve">
    <value>За потревител</value>
  </data>
  <data name="GaveItems" xml:space="preserve">
    <value>Предадени артикули</value>
  </data>
  <data name="GiveItems" xml:space="preserve">
    <value>Предай артикулите</value>
  </data>
  <data name="ItemDetails" xml:space="preserve">
    <value>Детайли артикул</value>
  </data>
  <data name="ItemsAreNotGave" xml:space="preserve">
    <value>Артикулите не са предадени !</value>
  </data>
  <data name="ItemsAreRequired" xml:space="preserve">
    <value>Полето "Артикули" е задължително.</value>
  </data>
  <data name="ItemsForGiving" xml:space="preserve">
    <value>Артикули за предаване</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Съобщение</value>
  </data>
  <data name="Offers" xml:space="preserve">
    <value>Оферти</value>
  </data>
  <data name="PermissableError" xml:space="preserve">
    <value>Стойността на полето "Брой" невалидна.</value>
  </data>
  <data name="PleaseSelectItems" xml:space="preserve">
    <value>Моля, изберете артикули</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Заявка</value>
  </data>
  <data name="RequestForFinishingIO" xml:space="preserve">
    <value>Заявки за завършване (Поръчка артикул)</value>
  </data>
  <data name="RequestForItems" xml:space="preserve">
    <value>Заявка за артикули</value>
  </data>
  <data name="RequestIsNotApproved" xml:space="preserve">
    <value>Заявката не е одобрена!</value>
  </data>
  <data name="RequestsForApprovingIO" xml:space="preserve">
    <value>Заявки за одобрение(Поръчка артикули)</value>
  </data>
  <data name="RequestsForFinishingIO" xml:space="preserve">
    <value>Заявки за завършване (Поръчка артикули)</value>
  </data>
  <data name="RequestSpecialMessage" xml:space="preserve">
    <value>Ще получите другите артикули по-късно !</value>
  </data>
  <data name="RotatingItem" xml:space="preserve">
    <value>Ротейтиг артикул</value>
  </data>
  <data name="SeccessSending" xml:space="preserve">
    <value>Вие успешно изпратихте заявка</value>
  </data>
  <data name="SelectedOffers" xml:space="preserve">
    <value>Избрани оферти</value>
  </data>
  <data name="SendOffers" xml:space="preserve">
    <value>Изратени оферти</value>
  </data>
  <data name="TwoAssets" xml:space="preserve">
    <value>Два актива имат имат един и същ инвентарен номер !</value>
  </data>
  <data name="WantItems" xml:space="preserve">
    <value>Поръчани артикули</value>
  </data>
</root>
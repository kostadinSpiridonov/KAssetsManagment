<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="e10" xml:space="preserve">
    <value>You have new accident to answer !</value>
  </data>
  <data name="e11" xml:space="preserve">
    <value>You have new answer from accident !</value>
  </data>
  <data name="e12" xml:space="preserve">
    <value>The items of request with number</value>
  </data>
  <data name="e121" xml:space="preserve">
    <value>was received</value>
  </data>
  <data name="e13" xml:space="preserve">
    <value>There is a new asset request for approving !</value>
  </data>
  <data name="e14" xml:space="preserve">
    <value>Your request for assets with inventory numbers</value>
  </data>
  <data name="e141" xml:space="preserve">
    <value>was not approved.</value>
  </data>
  <data name="e15" xml:space="preserve">
    <value>There is a new approved request for asset !</value>
  </data>
  <data name="e16" xml:space="preserve">
    <value>Your request for assets with inventory numbers</value>
  </data>
  <data name="e161" xml:space="preserve">
    <value>was approved. But the assets cannot be gave !</value>
  </data>
  <data name="e17" xml:space="preserve">
    <value>You have a request for finishing!</value>
  </data>
  <data name="e18" xml:space="preserve">
    <value>You have a new invoice for approving !</value>
  </data>
  <data name="e19" xml:space="preserve">
    <value>You have a new invice for paying !</value>
  </data>
  <data name="e20" xml:space="preserve">
    <value>Your invoice was not approved !</value>
  </data>
  <data name="e21" xml:space="preserve">
    <value>Your invoice was payed !</value>
  </data>
  <data name="e22" xml:space="preserve">
    <value>There is a new request for items !</value>
  </data>
  <data name="e23" xml:space="preserve">
    <value>Your request for</value>
  </data>
  <data name="e231" xml:space="preserve">
    <value>was not approved.</value>
  </data>
  <data name="e24" xml:space="preserve">
    <value>There is new approved request for items !</value>
  </data>
  <data name="e25" xml:space="preserve">
    <value>Your request for</value>
  </data>
  <data name="e251" xml:space="preserve">
    <value>was approved. But the items cannot be gave !</value>
  </data>
  <data name="e26" xml:space="preserve">
    <value>There are new request to provider for approving!</value>
  </data>
  <data name="e27" xml:space="preserve">
    <value>Your request to provider was not approved.</value>
  </data>
  <data name="e28" xml:space="preserve">
    <value>Your request to provider was approved.</value>
  </data>
  <data name="e29" xml:space="preserve">
    <value>You have a new requst for relocation for approving !</value>
  </data>
  <data name="e30" xml:space="preserve">
    <value>Your request for relocate the asset with inventory number</value>
  </data>
  <data name="e301" xml:space="preserve">
    <value>was approved.</value>
  </data>
  <data name="e31" xml:space="preserve">
    <value>Your request for relocate the asset with inventory number</value>
  </data>
  <data name="e311" xml:space="preserve">
    <value>was not approved.</value>
  </data>
  <data name="e32" xml:space="preserve">
    <value>You have a new asset with inventory number</value>
  </data>
  <data name="e321" xml:space="preserve">
    <value>for receiving.</value>
  </data>
  <data name="e33" xml:space="preserve">
    <value>Аsset with inventory number</value>
  </data>
  <data name="e331" xml:space="preserve">
    <value>was relocated.</value>
  </data>
  <data name="e34" xml:space="preserve">
    <value>There are new request for renovation !</value>
  </data>
  <data name="e35" xml:space="preserve">
    <value>Your request for renovation the asset with inventory number</value>
  </data>
  <data name="e351" xml:space="preserve">
    <value>was not approved.</value>
  </data>
  <data name="e36" xml:space="preserve">
    <value>The request for renovation was removed by user !</value>
  </data>
  <data name="e37" xml:space="preserve">
    <value>There is new asset for renovating !</value>
  </data>
  <data name="e38" xml:space="preserve">
    <value>Your asset with inventory number</value>
  </data>
  <data name="e381" xml:space="preserve">
    <value>was renovated and now it is active !</value>
  </data>
  <data name="e39" xml:space="preserve">
    <value>Asset with inventory number</value>
  </data>
  <data name="e391" xml:space="preserve">
    <value>was not renovated and now is active.</value>
  </data>
  <data name="e40" xml:space="preserve">
    <value>There is a new sccraping request for approving !</value>
  </data>
  <data name="e41" xml:space="preserve">
    <value>Your request for scrap asset with inventory number</value>
  </data>
  <data name="e411" xml:space="preserve">
    <value>was approved.</value>
  </data>
  <data name="e42" xml:space="preserve">
    <value>Аsset with inventory number</value>
  </data>
  <data name="e421" xml:space="preserve">
    <value>was scrapped.</value>
  </data>
  <data name="e43" xml:space="preserve">
    <value>Your request for scrapping asset with inventory number</value>
  </data>
  <data name="e431" xml:space="preserve">
    <value>was not approved.</value>
  </data>
</root>